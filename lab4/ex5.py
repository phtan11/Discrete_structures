#a
print("cau a:")
print("prove")
print("~p->q")
print("q->s")
print("~p->s (1) (by transitive) ")
print()
print("p->r")
print("~r -> ~p (by conditional)")
print("~p->s (by 1)")
print("~r->s (by transitive)")
print()

#b
print("cau b:")
print("prove")
print("p V s")
print("~s")
print("p (by elimination) (1)")
print()
print("p->(q->r)")
print("(q ^ ~r) ->~p")
print("~r ->~p (by specialization) (2)")
print("t->q")
print("~q->~t (by conditional) (3)")
print()
print("~r ->~p (by 2)")
print("~q->~t (by 3)")
print("~r->~t (by transitive)")
print()

#c
print("cau c")
print("prove")
print("~r V s")
print("r->s(by representation) (1)")
print()
print("p->q")
print("~q->~p (by conditional) (2)")
print()
print("p V r")
print("~p->r (by representation) (3)")
print()
print("~q->~p (by 2)")
print("~p->r (by 3)")
print("~q->r (by transitive) (4)")
print()
print("~q->r (by 4)")
print("r->s (by 1)")
print("~p - >s (by transitive)")
print()
#d
print("cau d")
print("Disprove")
print("p->r")
print("p")
print("r  (by ponens) (1)")
print()
print("p -> (q âˆ¨ ~r)")
print("r (by 1)")
print("p->q (by elimination) (2)")
print("~q V ~s")
print("q->~s (by negation) (3)")
print()
print("p->q (by 2)")
print("q->~s (by 3)")
print("p->~s (by transitive)")






